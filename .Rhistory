library(ggplot2)
library(RColorBrewer)
library(gridExtra)
library(rmarkdown)
#versão csv
arquivo <- "data/mobills-2015a2017-03.csv"
dados <- read.csv(arquivo)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE, locale="pt"),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
wday(2)
wday(2, label = T)
wday(2, label = T, locale="en")
?wday
library(readr)
locale("pt")
locale("pt_BR")
locale("pt_br")
Sys.setlocale('LC_TIME','C')
wday(2, label = T)
Sys.setlocale('LC_TIME','pt')
Sys.setlocale('LC_TIME','C')
Sys.setlocale('LC_TIME','C')
wday(2, label = T)
Sys.setlocale('LC_TIME','C')
wday(2, label = T)
wday(5, label = T)
wday(5, label = T, locale=locale("pt"))
locale("pt")
locale("pt_br")
locale("pt_BR")
locale("br")
locale("Br")
locale("BR")
?locale
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale(pt)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt"")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY", locale=locale("pt")),
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY", locale=locale("pt")),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE, locale="pt"),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date(date, "dmY", locale=locale("pt")),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE, locale="pt"),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date(date, "dMY", locale=locale("pt")),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE, locale="pt"),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
?parse_date()
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date(date, format = "%d%M%Y", locale=locale("pt")),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE, locale="pt"),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date(date, format = "%d%M%Y", locale=locale("pt")),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
dadosT$mes
dadosT$data
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date(date, format = "%d%m%Y", locale=locale("pt")),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
dadosT$date
dados$Date
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date(date, format = "%d %B %Y", locale=locale("pt")),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date(date, format = "%d%B%Y", locale=locale("pt")),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
locale("pt")
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
dadosT$mes
local -a
locale -a
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
Sys.setlocale('LC_TIME','C')
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE, locale="pt_BR.utf8"),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
Sys.setlocale('LC_TIME','C')
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
data = dmy(data, locale="pt_BR.utf8")
descrição = tolower(as.character(descrição)),
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
Sys.setlocale('LC_TIME','C')
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
data = dmy(data, locale="pt_BR.utf8"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
data <- parse_date_time(dados$Date, "dmY")
data
dmy(data)
?dmy(data)
data <- dmy(dados$Date)
data
class(data)
class(data[1])
data[1]
data[1] +1
data <- dmy(dados$Date, locale=Sys.getlocale("LC_TIME"))
data[1]
month(data[1])
month(data[1], label = T)
data <- dmy(dados$Date, locale=Sys.getlocale("pt_BR.utf8"))
data <- dmy(dados$Date, locale="pt_BR.utf8")
month(data[1], label = T)
data <- dmy(dados$Date, locale="pt")
data <- dmy(dados$Date, locale="pt_BR")
data <- dmy(dados$Date, locale="English")
data <- dmy(dados$Date, locale= Sys.getlocale("LC_TIME", "C"))
data <- dmy(dados$Date, locale= Sys.getlocale("LC_TIME"))
month(data[1], label = T)
data <- dmy(dados$Date, locale= Sys.getlocale("C"))
Sys.getlocale("LC_TIME"))
Sys.getlocale("LC_TIME")
Sys.setlocale('LC_TIME','pt_BR.utf8')
Sys.getlocale("LC_TIME"))
Sys.getlocale("LC_TIME")
data <- dmy(dados$Date, locale= Sys.getlocale("LC_TIME"))
month(data[1], label = T)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
dia ="10-02-2015"
dia.lubri <- dmY(dia)
library(lubridate)
dia.lubri <- dmY(dia)
dia.lubri <- dmy(dia)
dia.lubri
week(dia.lubri)
week(dia.lubri, label=TRUE)
wday(dia.lubri, label=TRUE)
wday(dia.lubri, label=TRUE, locale="pt")
month(dia.lubri, label=TRUE)
wday(dia.lubri, label=TRUE, locale="pt")
wday(dia.lubri, label=TRUE)
weekdays(dia.lubri)
months(dia.lubri)
# tratando o banco de dados
dadosT <- tbl_df(dados)
library(knitr)
opts_chunk$set(echo = FALSE, message = FALSE,
warning = FALSE, autodep = TRUE)
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
library(rmarkdown)
#versão csv
arquivo <- "data/mobills-2015a2017-03.csv"
dados <- read.csv(arquivo)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = month(data, label=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
dadosT$date
parse_date_time(dadosT$date, "dmY")
months(parse_date_time(dadosT$date, "dmY"))
?months()
months(parse_date_time(dadosT$date, "dmY"), abbreviate = TRUE)
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = months(data, abbreviate=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
dadosT$mes
View(dadosT)
?factor()
dadosT$mes
meses <- uniques(dadosT$mes)
meses <- unique(dadosT$mes)
meses
fmeses <- factor(meses, levels = c("Jan", "Fev", Mar, Abril, Mai, Junr, Jul, Ao )
fmeses <- factor(meses, levels = c("Jan", "Fev", "Mar", "Abril", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez")
fmeses <- factor(meses, levels = c("Jan", "Fev", "Mar", "Abril", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"))
fmeses
fmeses <- factor(meses, levels = c("Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"))
fmeses
fmeses <- factor(meses, levels = c("Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"), ordered=TRUE)
fmeses
# tratando o banco de dados
dadosT <- tbl_df(dados)
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
# # filtrando as informações que interessam, ou seja, somente da conta itau # e
# datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes
# disso e abaixo de 01-01-2017, porque quando este banco de dados foi gerado
# ainda não havia muita # informação sobre 2017
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dadosT %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(ano)
) %>%
filter(data >= as.Date("2015-01-01") & data < as.Date("2017-01-01")) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
months()
?months()
library(lubridate)
month(dadosT$data[1]
month(dadosT$data[1])
month(dadosT$data[1], label=T)
month(dadosT$data[1], label=TRUE)
dadosT$data[1]
month(dadosT$data[1], label=TRUE)
?month(dadosT$data[1], label=TRUE)
month(dadosT$data[1], label=FALSE)
month(dadosT$data[1])
month(dadosT$data[1], label=TRUE)
library(lubridate)
data <- c("10-02-2015", "11-03-2015")
data.lubri <- dmy(dia)
wday(dia.lubri, label=TRUE)
