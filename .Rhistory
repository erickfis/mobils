round(tabela, 2)
round(tabela[2:5,], 2)
tabela[2,]
tabela[2:5,]
round(tabela[2:5,],2)
round(tabela[2:5,2],2)
round(tabela[2,2],2)
tabela <- rbind(nomes, round(c(pA, pB, pC, af),2))
tabela
?round()
round(pA,2)
round(c(pA,pB),2)
tabela <- rbind(nomes, round(pA, pB, pC, af,2))
pA <- round(pA,2)
pB <- round(pB,2)
pC <- round(pC,2)
af <- round(af,2)
tabela <- rbind(nomes, pA, pB, pC, af)
tabela
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/12
2/(12*4)
11/(51*4)
12/(51*4)
11/(51*12)
skip()
1..6*.8/2
1.6*.8/2
.64
mypdf()
mypdf
integrate(mypdf, 0,1,6)
integrate(mypdf, 0,1.6)
sqrt(2)
99.7*.001
99.7*0.001
skip()
1-(.997*.001)*(1-.001)
(1-(.997*.001))*(1-.001)
skip()
skip()
library(swirl)
swirl()
3,5
3.5
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
integrate(myfunc, 0,2)
spop
mean(spop)
allsam
aply(allsam,1,mean)
apply(allsam,1,mean)
smeans
mean(smeans)
choose(8.7)
choose(8,7
)
choose(8,6)
choose(8,6)*.5⁷
choose(8,6)*.5^2
library(swirl)
swirl()
dice_sqr
skip()
ex2_fair - 3.5^2
skip()
matrix(rnorm(1000),1000)
?matrix
matrix(10:10)
matrix(10,10)
matrix(1:4)
matrix(rnorm(1000))
matrix(rnorm(1000),1000)
apply(matrix(rnorm(1000),1000),1,mean)
sd(apply(matrix(rnorm(1000),1000),1,mean))
sd(apply(matrix(rnorm(10000),1000),1,mean))
(apply(matrix(rnorm(10000),1000),1,mean))
(matrix(rnorm(10000),1000)
)
(matrix(rnorm(10000),1000))
(apply(matrix(rnorm(10000),1000),1,mean))
skip()
skip()
skip()
skip()
skip()
skip()
skip()
choose(5,3)*.8^3*(.2)^2
skip()
pbinom(2,5,.8,lower.tail = FALSE)
?pbinom()
?quantile()
?quantile(rnorm(100))
quantile(rnorm(100))
quantile(rnorm(100),2)
quantile(rnorm(100),.50)
qnorm(.1)
0
qnorm(.975,3,2)
skip()
pnorm(1200,1020,50, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE
)
skip()
.53
.53
ppois(3,2.5*4)
pbinom(5,1000,0.01)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(1000)
coinPlot(10000)
qnorm(.95)
skip()
qnorm(.975)
binom.test(60,100)$conf.int
mywald(.2)
skip()
lamb <- 5/94.32
skip()
skip()
readLines("data/mobills-2015a2017-03.csv")
readLines("data/mobills-2015a2017-03.csv". 10)
readLines("data/mobills-2015a2017-03.csv", 10)
readLines("data/newData.csv", 10)
library(knitr)
opts_chunk$set(echo = TRUE, message = FALSE, include = TRUE,
warning = FALSE, autodep = TRUE, options(scipen=999),
fig.pos = 'H')
library(scales)
library(stringr)
library(data.table)
library(chron)
library(dplyr)
library(lubridate)
library(ggplot2)
library(rmarkdown)
library(RColorBrewer)
library(gridExtra)
library(grid)
ls()
arquivos <- dir(.)
dir()
dir("data/"
)
arquivos <- dir("data/")
grep("mobils", arquivos)
grep("mobills", arquivos)
arquivos <- arquivos[grep("mobills", arquivos)]
arquivos <- dir("data/")
arquivos <- arquivos[grep("new", arquivos)]
arquivos <- dir("data/")
arquivos <- arquivos[grep("new", arquivos)]
for (i in 1:length(arquivos)) {
dados <- read.csv(arquivos[i])
if (i>1){
dados <- bind_rows(dados, read.csv(arquivo[i], header = FALSE))
}
}
for (i in 1:length(arquivos)) {
dados <- read.csv(arquivos[i])
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivo[i]), header = FALSE))
}
}
for (i in 1:length(arquivos)) {
dados <- read.csv(paste0("data/", arquivos[i]))
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivo[i]), header = FALSE))
}
}
for (i in 1:length(arquivos)) {
dados <- read.csv(paste0("data/", arquivos[i]))
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivos[i]), header = FALSE))
}
}
View(dados)
for (i in 1:length(arquivos)) {
dados <- read.csv(paste0("data/", arquivos[i]))
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivos[i])))
}
}
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
for (i in 1:length(arquivos)) {
dados <- read.csv(paste0("data/", arquivos[i]))
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivos[i])))
}
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(ano)
) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
View(dados)
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivos[i])))
}
View(dados)
dados <- read.csv(paste0("data/", arquivos[1]))
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
for (i in 2:length(arquivos)) {
dadosN <- read.csv(paste0("data/", arquivos[i]))
names(dadosN) <- tolower(names(dadosN))
dados2 <- bind_rows(dados, dadosN)
}
View(dados)
View(dadosN)
View(dados2)
dados <- read.csv(paste0("data/", arquivos[1]))
View(dados)
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dadosN <- read.csv(paste0("data/", arquivos[i]))
dados <- bind_rows(dados, dadosN)
}
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
teste1 <- read.csv(paste0("data/", arquivos[1]))
teste2 <- read.csv(paste0("data/", arquivos[2]))
teste3 <- bind_rows(teste1, teste2)
identical(teste3, dados)
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(ano)
) %>%
select(data, ano, mes, tipo, descrição, valor)
year("2017")
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
View(dadosT)
format(Sys.time(), '%Y %B, %d')
format(Sys.time(), '%Y-%B-%d')
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, paste0("dados-ok-", format(Sys.time(), '%Y-%B-%d')))
saveRDS(dadosT, paste0("data/dados-ok-", format(Sys.time(), '%Y-%B-%d'), ".rds"))
saveRDS(dadosT, "data/dados-ok.rds")
#load-multiplo
lerRds <- 0
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok.rds")
} else{
dadosT <- readRDS("data/dados-ok.rds")
}
totais <- summarise(dadosT, total=sum(valor))
View(totais)
View(dadosT)
View(dados)
valor = as.numeric(as.character(gsub(",","", dados$amount)))
valor = (as.character(gsub(",","", dados$amount)))
valor <- gsub("$","", dados$amount)
valor <- gsub("$","", dados$amount)
valor
str(dados)
valor <- gsub("$","", as.character(dados$amount))
?gsub()
dados$amoun
dados$amount
valor <- gsub("$","", dados$amount)
rm(valor)
valor <- gsub("$","", dados$amount)
valor <- gsub("\\$","", dados$amount)
valor <- as.numeric(gsub("\\$","", dados$amount))
valor <- as.numeric(gsub("\\$|,","", dados$amount))
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor2 = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
View(dadosT)
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor2 = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor, valor2)
#load-multiplo
lerRds <- 0
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok.rds")
} else{
dadosT <- readRDS("data/dados-ok.rds")
}
totais <- summarise(dadosT, total=sum(valor))
View(totais)
#load-multiplo
lerRds <- 1
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok.rds")
} else{
dadosT <- readRDS("data/dados-ok.rds")
}
totais2 <- summarise(dadosT, total=sum(valor))
identical(totais, totais2)
#load-multiplo
lerRds <- 1
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok.rds")
} else{
dadosT <- readRDS("data/dados-ok.rds")
totais3 <- summarise(dadosT, total=sum(valor))
}
identical(totais, totais3)
#load-multiplo
lerRds <- 1
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok-1.rds")
} else{
dadosT <- readRDS("data/dados-ok-3.rds")
totais3 <- summarise(dadosT, total=sum(valor))
}
