g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) +geom_smooth(method = "lm", se=FALSE, size = 2, color="black")
skip()
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth=18497/30)
brk
counts
qplot(price, data = diamonds, binwidth=18497/30, fill=cut)
qplot(price, data = diamonds, geom(density)
qplot(price, data = diamonds, geom(density))
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color=cut)
qplot(carac, price, data=diamonds)
qplot(caract, price, data=diamonds)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(lm)
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets = .~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth,price))
summary(g)
g + geom_point(alpha=1/2)
g + geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth,price))
g + geom_point(alpha=1/3) + facet_null()
g + geom_point(alpha=1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha=1/3) + facet_grid(cut~car2) + geom_smooth(method = "lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price))
ggplot(diamonds, aes(carat, price))+ geom_boxplot()+facet_grid(.~cut)
sample(100, 2)
sample(100, 10)
sample(100, 10, repeat=TRUE)
sample(100, 10, replace = =TRUE)
sample(100, 10, replace =TRUE)
x <- sample(100, 10, replace =TRUE)
y <- sample(100, 10, replace =TRUE)
dados <- data.frame(x,y)
dados
dist(dados)
g <- ggplot(dados, aes(x,y))
g+geom_point()
y <- sample(1000, 100, replace =TRUE)
x <- sample(1000, 100, replace =TRUE)
dados <- data.frame(x,y)
g <- ggplot(dados, aes(x,y))
g <- ggplot(dados, aes(x,y))
dev.off
dev.off()
g <- ggplot(dados, aes(x,y))
g+geom_point()
distxy <- dist(dados)
distxy
dim(distxy)
class(distxy)
str(distxy)
hclu <- hclust(distxy)
plot(hclu)
x <- sample(1000, 20, replace =TRUE)
y <- sample(1000, 200, replace =TRUE)
dados <- data.frame(x,y)
distxy <- dist(dados)
hclu <- hclust(distxy)
plot(hclu)
x <- sample(1000, 20, replace =TRUE)
y <- sample(1000, 20, replace =TRUE)
dados <- data.frame(x,y)
distxy <- dist(dados)
hclu <- hclust(distxy)
plot(hclu)
dados
g <- ggplot(dados, aes(x,y))
dev.new()
g+geom_point()
heatmap(dados)
mdados <- as.matrix(dados)
heatmap(mdados)
dev.new()
g+geom_point()
?geom_point()
g+geom_point(show.legend = TRUE)
dev.new()
g+geom_point(show.legend = TRUE)
g+geom_point(show.legend = TRUE) + geom_text()
g+geom_point(show.legend = TRUE) + geom_text(label=label)
seq(1,20)
label <- seq(1,20)
dados <- data.frame(x,y,label)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE) + geom_text(label=label)
g+geom_point(show.legend = TRUE) + geom_text(label=label, hjust=2)
g+geom_point(show.legend = TRUE) + geom_text(label=label, hjust=1)
g+geom_point(show.legend = TRUE) + geom_text(label=label, hjust=1.2)
g+geom_point(show.legend = TRUE) + geom_text(label=label, hjust=1.5)
x <- sample(1000, 20, replace =TRUE)
y <- sample(1000, 20, replace =TRUE)
label <- seq(1,20)
dados <- data.frame(x,y,label)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE) + geom_text(label=label, hjust=1.5)
kmobl <- kmeans(dados, centers=3)
kmobl
kmobl <- kmeans(dadosF, centers=3)
dadosF <- data.frame(x,y)
kmobl <- kmeans(dadosF, centers=3)
kmobl
k <- ggplot(dadosF, aes(x,y))
k <- ggplot(dadosF, aes(x,y))
k+geom_point()
kmobl$cluster
kmobl$centers
kmobl$totss
kmobl$withinss
kmobl$size
kmobl$ifault
kmobl$iter
k <- ggplot(dadosF, aes(x,y))
k+geom_point()
plot(dados$x, dados$y, col=kmobl$cluster, pch=19)
points(kmobl$centers, col=1:3, pch=3)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE) + geom_text(label=label, hjust=1.5)
g <- ggplot(dados, aes(x,y, col=kmobl$cluster))
g+geom_point(show.legend = TRUE) + geom_text(label=label, hjust=1.5)
kmobl$cluster
g <- ggplot(dados, aes(x,y, color=kmobl$cluster))
g+geom_point(show.legend = TRUE) + geom_text(label=label, hjust=1.5)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=kmobl$cluster)) + geom_text(label=label, hjust=1.5)
as.factor(kmobl$cluster)
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster))) + geom_text(label=label, hjust=1.5)
g+ geom_point(aes(kmobl$centers))
kmobl$centers
kmobl$centers[x]
kmobl$centers[,x]
centros <- kmobl$centers
centros
class(centros)
centros[,1]
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster)))
+ geom_text(label=label, hjust=1.5)
g+ geom_text(label=label, hjust=1.5)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster)))
+ geom_text(label=label, hjust=1.5)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster)))+
geom_text(label=label, hjust=1.5)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster)))+
geom_text(label=label, hjust=1.5)+
geom_point(data=centros)
centros <- data.frame(kmobl$centers)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster)))+
geom_text(label=label, hjust=1.5)+
geom_point(data=centros)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster)))+
geom_text(label=label, hjust=1.5)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster)))+
geom_text(label=label, hjust=1.5)+
geom_point(data=centros)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster)))+
geom_text(label=label, hjust=1.5)+
geom_point(data = centros, color=1:3)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=as.factor(kmobl$cluster)))+
geom_text(label=label, hjust=1.5)+
geom_point(data = centros, aes(color=as.factor(kmobl$cluster)))
?geom_point()
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=factor(kmobl$cluster)))+
geom_text(label=label, hjust=1.5)+
geom_point(data=centros, shape=21)
g <- ggplot(dados, aes(x,y))
g+geom_point(show.legend = TRUE, aes(color=factor(kmobl$cluster)))+
geom_text(label=label, hjust=1.5)+
geom_point(data=centros, shape=13, size=5)
> plot(dados$x, dados$y, col=kmobl$cluster, pch=19)
> points(kmobl$centers, col=1:3, pch=3)
plot(dados$x, dados$y, col=kmobl$cluster, pch=19)
points(kmobl$centers, col=1:3, pch=3)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
4
5
5
12
abline(h=0.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
dsa
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
class(mt)
plot(denmt)
distmt
clusters <- hclust(dist(iris[, 3:4]))
plot(clusters)
clusters
corte <- cutree(clusters, 4)
corte
dim(iris)
table(corte, iris$Species)
plot(clusters)
clusters <- hclust(dist(iris[, 3:4]), method = 'average')
plot(clusters)
corte <- cutree(clusters, 5)
table(corte, iris$Species)
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species)) +
geom_point(alpha = 0.4, size = 3.5)
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = corte) +
scale_color_manual(values = c('black', 'red', 'green')
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = corte) +
scale_color_manual(values = c('black', 'red', 'green')
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species))+
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = corte)+
scale_color_manual(values = c('black', 'red', 'green')
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species))+
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = corte)+
scale_color_manual(values = c('black', 'red', 'green')
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species))+
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = corte)
corte <- cutree(clusters, 5)
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species))+
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = corte)
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species))+
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = corte)+
scale_color_manual(values = c('black', 'red', 'green')
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species))+
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = corte)+
scale_color_manual(values = c('black', 'red', 'green'))
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$Species)) +
geom_point(alpha = 0.4, size = 3.5) + geom_point(col = corte) +
scale_color_manual(values = c('black', 'red', 'green'))
mpg
View(mpg)
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point()
swirl()
cmat
cx
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
skip()
skip()
skip()
x
newClust
skip()
skip()
skip()
skip()
skip()
cols1
cols1[newClust2]
skip()
skip()
skip()
skip()
kmeans(dataFrame, 3)
kmObj$iter
skip()
teste <- kmeans(dataFrame, 3)
plot(x,y,col=teste$cluster,pch=19,cex=2)
teste
skip()
skip()
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
dataMatrix <- matrix(rnorm(400, nrow=40))
dataMatrix <- matrix(rnorm(400), nrow=40))
dataMatrix <- matrix(rnorm(400), nrow=40)
dataMatrix
heatmap(dataMatrix)
rep(c(0,3), each=5)
rbinom(1, size=1)
rbinom(1, size=1, prob=0.5)
rbinom(1, size=1, prob=0.5)
rbinom(1, size=1, prob=0.5)
rbinom(1, size=1, prob=0.5)
rbinom(1, size=1, prob=0.5)
rbinom(1, size=1, prob=0.5)
rbinom(1, size=2, prob=0.5)
rbinom(1, size=2, prob=0.5)
rbinom(1, size=2, prob=0.5)
rbinom(1, size=2, prob=0.5)
rbinom(2, size=10, prob=0.5)
?rbinom()
rbinom(2, size=1, prob=0.5)
rbinom(10, size=1, prob=0.5)
rbinom(10, size=2, prob=0.5)
rbinom(10, size=10, prob=0.5)
rbinom(10, size=10, prob=0.1)
rbinom(10, size=10, prob=0.01)
rbinom(10, size=10, prob=0.1)
rbinom(10, size=10, prob=0.6)
rbinom(10, size=10, prob=0.8)
clusters <- hclust(dist(iris[, 3:4]), method = 'average')
clusters
str(clusters)
plot(clusters)
corte <- cutree(clusters, 5)
corte
clusters$order
clusters$height
clusters$labels
clusters$merge
nrow(dataMatrix)
nrow(dataMatrix):1
dataMatrix
nrow(dataMatrix):1
nrow(dataMatrix):2
nrow(dataMatrix):38
dataMatrix[1,1]
dataMatrix[,1
dataMatrix[,1]
dataMatrix[,nrow(dataMatrix):1]
scale(dataMatrix)
?scale(dataMatrix)
?svd
svd(dataMatrix)
svd(scale(dataMatrix))
?scale(dataMatrix)
dataMatrix
dataMatrix[40,10]
colMeans(dataMatrix)
colMeans(dataMatrix)[10]
scale(dataMatrix)
scale(dataMatrix)[40,10]
dataMatrix[40,10]-colMeans(dataMatrix)[10]
?svd
svd(scale(dataMatrix))
library(impute)
install.packages("impute")
setwd("~/Documents/dataS-anotacoes/exploratory/week4-project")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
indices <- intersect(grep("Coal", SCC$EI.Sector), grep("Comb", SCC$EI.Sector))
combCoalSCC <- SCC$SCC[indices]
combCoal <- NEI[NEI$SCC %in% combCoalSCC,]
library(dplyr)
combCoal_em <- combCoal %>% group_by(year) %>% summarise(Emissions = sum(Emissions))
barplot(combCoal_em$Emissions, names.arg = combCoal_em$year, xlab = "Year",
ylab = "Total PM2.5 Emission", main = "Total Combustion Coal Emission by Year in US")
library(xlsx)
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
arquivo <- "data/start-2017-03-25.xls"
dados <- read.xlsx(arquivo, sheetName = "Despesa", startRow = 2)
setwd("~/Documents/dataS-anotacoes/mobils")
arquivo <- "data/start-2017-03-25.xls"
dados <- read.xlsx(arquivo, sheetName = "Despesa", startRow = 2)
dadosT <- dados[complete.cases(dados),]
dadosT <- tbl_df(dadosT) #para usar dplyr
names(dadosT) <- tolower(names(dadosT)) # para facilitar o uso das vars
dadosM <- dadosT %>%    rename(tipo = tipo.de.despesa) %>%
mutate(data = parse_date_time(data, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
mes = month(data, label=TRUE),
ano = factor(year(data))
) %>%
# filtrando as informações que interessam, ou seja, somente da conta itau
# e datas acima de 01-01-15, vamos considerar que eu não usava bem o app antes disso
# e abaixo de 25-03-2017, quando o arquivo foi gerado (pq o db tem dados de
# "previsão de gastos" até o fim do ano
filter(conta=="itau" &  data >= as.Date("2015-01-01") &
data <= as.Date("2017-03-25")) %>%
## remove as colunas indesejadas
select(data, ano, mes, tipo, descrição, valor)
dadosM <- tbl_df(dadosM)
dadosM <- group_by(dadosM, tipo, ano, mes)
saveRDS(dadosM, "dadosM.rds")
save(dadosM, "dadosM.RData")
save(dadosM, file="dadosM.RData")
str(dadosM)
teste <- readRDS("dadosM.rds")
str(teste)
teste$mes
mes <- teste$mes[1]
mes
class(mes)
teste2 <- arrange(teste, desc(mes))
View(teste2)
teste2 <- arrange(teste, desc(ano), desc(mes))
View(teste2)
str(teste)
teste
dadosM <- readRDS("dadosM.rds")
totais <- summarise(dadosM, total=sum(valor))
colourCount = length(unique(totais$tipo))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
dadosFil <- dadosM
fonte <- dadosFil$descrição
filtro <- which(!(grepl("[Pp]revisão", fonte) | grepl("[Vv]isa", fonte)))
#aplicando o filtro
dadosFil <- dadosFil[filtro,]
dadosFil <- group_by(dadosFil, tipo, ano, mes)
totais <- summarise(dadosFil, total=sum(valor))
plt <- ggplot(totais, aes(x=mes, y=total, group=tipo, colour=tipo))
(plt +  geom_line() + geom_point() +
scale_colour_manual(values = getPalette(colourCount))+
facet_grid(ano ~.) +
labs(title="Gastos por categoria", y="Total (R$)") +
theme(plot.title = element_text(hjust = 0.5))
# guides(fill=FALSE)
)
totais <- totais[which(totais$ano %in% c(2015,2016)),]
dadosFil <- dadosFil[which(dadosFil$ano %in% c(2015,2016)),]
dt <- data.table(dadosFil)
dt[, total := sum(valor), by = list(tipo,ano,mes)]
dt[, media := mean(total), by = list(tipo,ano)]
dt[, desvio := sd(total), by = list(tipo,ano)]
plt <- ggplot(totais, aes(x=mes, y=total, group=tipo, colour=tipo))
(plt +  geom_line() + geom_point() +
scale_colour_manual(values = getPalette(colourCount))+
facet_grid(ano ~.) +
labs(title="Gastos por categoria", y="Total (R$)") +
theme(plot.title = element_text(hjust = 0.5))
)
saveRDS(dadosFil, "dados-filtrados.rds")
saveRDS(dadosFil, "dados-filtrados.rds")
saveRDS(totais, "totais.csv")
saveRDS(totais, "totais.rds")
saveRDS(dt, "dt.rds")
dt <- readRDS("dt.rds")
dt.alim <- dt[dt$tipo=="alimentação",]
dt.alim[, erro := desvio/sqrt(length(unique(total))), by = list(ano)]
plt.alim <- ggplot(dt.alim, aes(x=mes, y=total, group=ano, colour=ano))
(plt.alim +  geom_line() +
geom_point(size=0.5, alpha=0.5) +
facet_grid(ano ~.) +
geom_smooth(colour="black", linetype=3, alpha=0.2) +
geom_errorbar(aes(ymin=total-erro, ymax=total+erro), width=.1) +
geom_hline(aes(yintercept = media, colour = ano), linetype=2) +
labs(title="Gastos por categoria", y="Total (R$)") +
theme(plot.title = element_text(hjust = 0.5))
)
(plt.alim +  geom_line() +
geom_point(size=0.5, alpha=0.5) +
facet_grid(ano ~.) +
geom_smooth(colour="black", linetype=3, alpha=0.2) +
geom_errorbar(aes(ymin=total-erro, ymax=total+erro), width=.1) +
geom_hline(aes(yintercept = media, colour = ano), linetype=2) +
labs(title="Gastos com alimentação", y="Total (R$)") +
theme(plot.title = element_text(hjust = 0.5))
)
(plt.alim +  geom_line() +
geom_point(size=0.5, alpha=0.5) +
facet_grid(ano ~., scale="free") +
geom_smooth(colour="black", linetype=3, alpha=0.2) +
geom_errorbar(aes(ymin=total-erro, ymax=total+erro), width=.1) +
geom_hline(aes(yintercept = media, colour = ano), linetype=2) +
labs(title="Gastos com alimentação", y="Total (R$)") +
theme(plot.title = element_text(hjust = 0.5))
)
dev.copy(png, file="plot-alim.png")
dev.off()
dt.pag <- dt[dt$tipo=="pagamentos",]
dt.pag[, erro := desvio/sqrt(length(unique(total))), by = list(ano)]
plt.pag <- ggplot(dt.pag, aes(x=mes, y=total, group=ano, colour=ano))
(plt.pag +  geom_line() +
geom_point(size=0.5, alpha=0.5) +
facet_grid(ano ~., scale="free") +
geom_smooth(colour="black", linetype=3, alpha=0.2) +
geom_errorbar(aes(ymin=total-erro, ymax=total+erro), width=.1) +
geom_hline(aes(yintercept = media, colour = ano), linetype=2) +
labs(title="Gastos com pagamentos", y="Total (R$)") +
theme(plot.title = element_text(hjust = 0.5))
)
dev.copy(png, file="plot-pag.png")
dev.off()
dt.cor <- dt[dt$tipo=="corolla",]
dt.cor[, erro := desvio/sqrt(length(unique(total))), by = list(ano)]
plt.cor <- ggplot(dt.cor, aes(x=mes, y=total, group=ano, colour=ano))
(plt.cor +  geom_line() +
geom_point(size=0.5, alpha=0.5) +
facet_grid(ano ~., scale="free") +
geom_smooth(colour="black", linetype=3, alpha=0.2) +
geom_errorbar(aes(ymin=total-erro, ymax=total+erro), width=.1) +
geom_hline(aes(yintercept = media, colour = ano), linetype=2) +
labs(title="Gastos com carro", y="Total (R$)") +
theme(plot.title = element_text(hjust = 0.5))
)
dev.copy(png, file="plot-cor.png")
dev.off()
