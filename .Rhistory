skip()
pbinom(2,5,.8,lower.tail = FALSE)
?pbinom()
?quantile()
?quantile(rnorm(100))
quantile(rnorm(100))
quantile(rnorm(100),2)
quantile(rnorm(100),.50)
qnorm(.1)
0
qnorm(.975,3,2)
skip()
pnorm(1200,1020,50, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE
)
skip()
.53
.53
ppois(3,2.5*4)
pbinom(5,1000,0.01)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(1000)
coinPlot(10000)
qnorm(.95)
skip()
qnorm(.975)
binom.test(60,100)$conf.int
mywald(.2)
skip()
lamb <- 5/94.32
skip()
skip()
readLines("data/mobills-2015a2017-03.csv")
readLines("data/mobills-2015a2017-03.csv". 10)
readLines("data/mobills-2015a2017-03.csv", 10)
readLines("data/newData.csv", 10)
library(knitr)
opts_chunk$set(echo = TRUE, message = FALSE, include = TRUE,
warning = FALSE, autodep = TRUE, options(scipen=999),
fig.pos = 'H')
library(scales)
library(stringr)
library(data.table)
library(chron)
library(dplyr)
library(lubridate)
library(ggplot2)
library(rmarkdown)
library(RColorBrewer)
library(gridExtra)
library(grid)
ls()
arquivos <- dir(.)
dir()
dir("data/"
)
arquivos <- dir("data/")
grep("mobils", arquivos)
grep("mobills", arquivos)
arquivos <- arquivos[grep("mobills", arquivos)]
arquivos <- dir("data/")
arquivos <- arquivos[grep("new", arquivos)]
arquivos <- dir("data/")
arquivos <- arquivos[grep("new", arquivos)]
for (i in 1:length(arquivos)) {
dados <- read.csv(arquivos[i])
if (i>1){
dados <- bind_rows(dados, read.csv(arquivo[i], header = FALSE))
}
}
for (i in 1:length(arquivos)) {
dados <- read.csv(arquivos[i])
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivo[i]), header = FALSE))
}
}
for (i in 1:length(arquivos)) {
dados <- read.csv(paste0("data/", arquivos[i]))
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivo[i]), header = FALSE))
}
}
for (i in 1:length(arquivos)) {
dados <- read.csv(paste0("data/", arquivos[i]))
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivos[i]), header = FALSE))
}
}
View(dados)
for (i in 1:length(arquivos)) {
dados <- read.csv(paste0("data/", arquivos[i]))
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivos[i])))
}
}
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
for (i in 1:length(arquivos)) {
dados <- read.csv(paste0("data/", arquivos[i]))
if (i>1){
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivos[i])))
}
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(ano)
) %>%
select(data, ano, mes, tipo, descrição, valor, cartao)
View(dados)
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(
paste0("data/", arquivos[i])))
}
View(dados)
dados <- read.csv(paste0("data/", arquivos[1]))
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
for (i in 2:length(arquivos)) {
dadosN <- read.csv(paste0("data/", arquivos[i]))
names(dadosN) <- tolower(names(dadosN))
dados2 <- bind_rows(dados, dadosN)
}
View(dados)
View(dadosN)
View(dados2)
dados <- read.csv(paste0("data/", arquivos[1]))
View(dados)
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dadosN <- read.csv(paste0("data/", arquivos[i]))
dados <- bind_rows(dados, dadosN)
}
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
teste1 <- read.csv(paste0("data/", arquivos[1]))
teste2 <- read.csv(paste0("data/", arquivos[2]))
teste3 <- bind_rows(teste1, teste2)
identical(teste3, dados)
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(ano)
) %>%
select(data, ano, mes, tipo, descrição, valor)
year("2017")
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
View(dadosT)
format(Sys.time(), '%Y %B, %d')
format(Sys.time(), '%Y-%B-%d')
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, paste0("dados-ok-", format(Sys.time(), '%Y-%B-%d')))
saveRDS(dadosT, paste0("data/dados-ok-", format(Sys.time(), '%Y-%B-%d'), ".rds"))
saveRDS(dadosT, "data/dados-ok.rds")
#load-multiplo
lerRds <- 0
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(as.character(gsub(",","", valor))),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok.rds")
} else{
dadosT <- readRDS("data/dados-ok.rds")
}
totais <- summarise(dadosT, total=sum(valor))
View(totais)
View(dadosT)
View(dados)
valor = as.numeric(as.character(gsub(",","", dados$amount)))
valor = (as.character(gsub(",","", dados$amount)))
valor <- gsub("$","", dados$amount)
valor <- gsub("$","", dados$amount)
valor
str(dados)
valor <- gsub("$","", as.character(dados$amount))
?gsub()
dados$amoun
dados$amount
valor <- gsub("$","", dados$amount)
rm(valor)
valor <- gsub("$","", dados$amount)
valor <- gsub("\\$","", dados$amount)
valor <- as.numeric(gsub("\\$","", dados$amount))
valor <- as.numeric(gsub("\\$|,","", dados$amount))
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor2 = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
View(dadosT)
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor2 = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor, valor2)
#load-multiplo
lerRds <- 0
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok.rds")
} else{
dadosT <- readRDS("data/dados-ok.rds")
}
totais <- summarise(dadosT, total=sum(valor))
View(totais)
#load-multiplo
lerRds <- 1
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok.rds")
} else{
dadosT <- readRDS("data/dados-ok.rds")
}
totais2 <- summarise(dadosT, total=sum(valor))
identical(totais, totais2)
#load-multiplo
lerRds <- 1
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok.rds")
} else{
dadosT <- readRDS("data/dados-ok.rds")
totais3 <- summarise(dadosT, total=sum(valor))
}
identical(totais, totais3)
#load-multiplo
lerRds <- 1
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount, descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok-1.rds")
} else{
dadosT <- readRDS("data/dados-ok-3.rds")
totais3 <- summarise(dadosT, total=sum(valor))
}
library(knitr)
opts_chunk$set(echo = TRUE, message = FALSE, include = TRUE,
warning = FALSE, autodep = TRUE, options(scipen=999),
fig.pos = 'H')
library(scales)
library(stringr)
library(data.table)
library(chron)
library(dplyr)
library(lubridate)
library(ggplot2)
library(rmarkdown)
library(RColorBrewer)
library(gridExtra)
library(grid)
dir
dir()
dir("data/"
)
#load-multiplo
lerRds <- 0
if (lerRds==0){
arquivos <- dir("data/")
arquivos <- arquivos[grep("mobills", arquivos)]
dados <- read.csv(paste0("data/", arquivos[1]))
for (i in 2:length(arquivos)) {
dados <- bind_rows(dados, read.csv(paste0("data/", arquivos[i])))
}
dados <- tbl_df(dados)
names(dados) <- tolower(names(dados)) # para facilitar o uso das vars
# # filtrando as informações que interessam,
# Além disso, transformar tudo para lowercase, converter formato de datas,
# renomear variáveis, selecionar as que interessam, criar variável mês
dadosT <- dados %>% rename(tipo = category, valor = amount,
descrição = description) %>%
mutate(data = parse_date_time(date, "dmY"),
descrição = tolower(as.character(descrição)),
tipo = factor(tolower(as.character(tipo))),
valor = as.numeric(gsub("\\$|,","", valor)),
mes = factor(months(data, abbreviate=TRUE),
levels = c("Jan", "Fev", "Mar", "Abr", "Mai",
"Jun", "Jul", "Ago", "Set", "Out", "Nov",
"Dez"), ordered=TRUE),
ano = factor(year(data))
) %>%
select(data, ano, mes, tipo, descrição, valor)
# Vamos agrupar os dados por tipo de gasto, ano e mes, e depois calcular o total de gastos em cada categoria
dadosT <- tbl_df(dadosT) %>% group_by(tipo, ano, mes)
saveRDS(dadosT, "data/dados-ok.rds")
} else{
dadosT <- readRDS("data/dados-ok.rds")
}
totais <- summarise(dadosT, total=sum(valor))
View(dados)
View(dadosT)
View(totais)
View(totais)
# o gráfico
# as cores:
# Neste caso, temos 20 cat, mas somente 9 cores na paleta brewer padrao
colourCount = length(unique(totais$tipo))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
plt <- ggplot(totais, aes(x=mes, y=total, group=tipo, colour=tipo))
(plt +  geom_line() + geom_point() +
scale_colour_manual(values = getPalette(colourCount))+
facet_grid(ano ~., scale = "free") +
labs(title="Gastos por tipo de despesa", y="Total (R$)", x="Mês") +
theme(plot.title = element_text(hjust = 0.5))
)
sub <- with(dadosM, ano==2015 & mes=="Mar" & tipo=="pagamentos" & valor > 4000)
sub <- with(dadosT, ano==2015 & mes=="Mar" & tipo=="pagamentos" & valor > 4000)
dadosFil <- dadosT[which(!sub),]
dadosFil <- group_by(dadosFil, tipo, ano, mes)
totais <- summarise(dadosFil, total=sum(valor))
plt <- ggplot(totais, aes(x=mes, y=total, group=tipo, colour=tipo))
(plt +  geom_line() + geom_point() +
scale_colour_manual(values = getPalette(colourCount))+
facet_grid(ano ~., scale="free") +
labs(title="Gastos por tipo de despesa", y="Total (R$)", x="Mês") +
theme(plot.title = element_text(hjust = 0.5))
)
View(totais)
totais
sub <- with(dadosT, ano==2015 & mes=="Mar" & tipo=="pagamentos" & valor > 4000)
dadosFil <- dadosT[which(!sub),]
dadosFil <- group_by(dadosFil, tipo, ano, mes)
totais <- summarise(dadosFil, total=sum(valor)) %>%
mutate(media = mean(total))
rm(dados, dadosT) # house cleanning
plt <- ggplot(totais, aes(x=mes, y=total, group=tipo, colour=tipo))
(plt +  geom_line() + geom_point() +
scale_colour_manual(values = getPalette(colourCount))+
facet_grid(ano ~., scale="free") +
labs(title="Gastos por tipo de despesa", y="Total (R$)", x="Mês") +
theme(plot.title = element_text(hjust = 0.5))
)
#devidos subsets
totais.alim <- totais[totais$tipo=="alimentação",]
plt.alim <- ggplot(totais.alim, aes(x=mes, y=total, group=ano, colour=ano))
(plt.alim +  geom_line() +
geom_point(size=0.5, alpha=0.5) +
geom_hline(aes(yintercept = media, colour = ano), linetype=2) +
labs(title="Gastos com alimentação", y="Total (R$)", x="Mês") +
theme(plot.title = element_text(hjust = 0.5))
)
